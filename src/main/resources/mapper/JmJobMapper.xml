<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTO Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- JmJob表的真身 -->
<mapper namespace="com.BSMES.jd.main.dao.JmJobDao">

    <!-- id 为方法名 resultType 返回结果(需要带上路径) -->
    <insert id="insertJmJobs" parameterType="com.BSMES.jd.main.dto.JmJobDTO">
        insert into jm_job (sid, cid, jb_no,rs_no , md_no , wk_no, qty, prd_no, beg_dd, end_dd, qty_ship,unit,dev_name,md_name,prd_name,dep,create_date,state,sorg ) values
        <foreach collection="list" item="jmJob" index="index" separator=",">
            (#{jmJob.sid}, #{jmJob.cid}, #{jmJob.jbNo}, #{jmJob.rsNo},#{jmJob.mdNo},#{jmJob.wkNo},cast(#{jmJob.qty,jdbcType=DECIMAL} as decimal(22,8)),
            #{jmJob.prdNo},#{jmJob.begDd},#{jmJob.endDd},cast(#{jmJob.qtyShip,jdbcType=DECIMAL} as decimal(22,8)),#{jmJob.unit},#{jmJob.devName},
            #{jmJob.mdName},#{jmJob.prdName},#{jmJob.dep},#{jmJob.createDate},#{jmJob.state},#{jmJob.sorg})
        </foreach>
    </insert>

    <select id="joinFindJob" parameterType="com.BSMES.jd.main.dto.JobJoin" resultType="com.BSMES.jd.main.dto.JobJoin">
        SELECT job.sid as sid,job.cid as cid,job.jb_no as jb_no,job.dep as dep,job.dev_name as dev_name,job.md_name as mould_name,
        job.prd_name as prd_name,prdtut.umc as umc,momf.qty as qty_ast,job.qty as qty_plan,job.qty_ship as qty_ship,job.beg_dd as beg_dd,
        job.end_dd as end_dd,job.state as state,job.create_date as create_date,job.md_no as md_no,job.prd_no as prd_no,job.sorg as sorg,job.wk_no as wk_no,
        job.rs_no as rs_no,dev.devid as devid FROM jm_job as job
        JOIN jm_prdtut as prdtut on job.unit = prdtut.ubm
        JOIN jm_mo_mf as momf on momf.sid = job.sid
        JOIN jm_dev as dev on dev.dev_no = job.rs_no
        <where>
            <if test="prdNo != null and prdNo.length()>0">
                and job.prd_no like CONCAT('%',#{prdNo},'%')
            </if>
            <if test="sid != null and sid.length()>0">
                and job.sid like CONCAT('%',#{sid},'%')
            </if>
            <if test="createDate != null and createDate.toString().length()>0">
                and job.create_date between #{createDate} and #{createDate}+1
            </if>
            <if test="dep != null and dep.length()>0">
                and job.dep like CONCAT('%',#{dep},'%')
            </if>
            <if test="prdName != null and prdName.length()>0">
                and job.prd_name like CONCAT('%',#{prdName},'%')
            </if>
            <if test="devName != null and devName.length()>0" >
                and job.dev_name like CONCAT('%',#{devName},'%')
            </if>
            <if test="mouldName != null and mouldName.length()>0" >
                and job.md_name like CONCAT('%',#{mouldName},'%')
            </if>
            <if test="begDd != null and begDd.toString().length()>0" >
                and job.beg_dd &gt;= #{begDd}
            </if>
            <if test="endDd != null and endDd.toString().length()>0" >
                and job.end_dd &lt;= #{endDd}
            </if>
            <if test="state!=null and state.length()>0" >
                and job.state = #{state}
            </if>
            <if test="rsNo!=null and rsNo.length()>0" >
                and job.rs_no like CONCAT('%',#{rsNo},'%')
            </if>
            <if test="jbNo!=null and jbNo.length()>0" >
                and job.jb_no like CONCAT('%',#{jbNo},'%')
            </if>
        </where>
        <if test="descOrder!=null and descOrder.length()>0 ">
            ORDER BY ${descOrder} DESC
        </if>
        <if test="ascOrder!=null and ascOrder.length()>0 ">
            ORDER BY ${ascOrder} ASC
        </if>
	</select>

    <select id="getJmJobReport" parameterType="com.BSMES.jd.main.dto.ResultType" resultType="com.BSMES.jd.main.dto.Report">
        select job.dep,job.prd_no,job.prd_name,sum(dqty) as dqty,sum(jqty) as jqty,sum(wqty) as wqty,sum(sqty) as sqty
        from jm_job as job
        join (select job.jb_no,job.dep,job.prd_no,job.prd_name,mo.qty as dqty,job.qty as jqty,jb.qty as wqty,sum(isnull(recb.qty_ok,0)) as sqty
        from jm_job as job
        left join jm_job_rec as rec on job.jb_no=rec.jb_no
        left join jm_job_rec_b as recb on recb.opsid=rec.opsid
        left join jm_mo_mf as mo on mo.sid=job.sid
        left join
        (select job.jb_no,sum(isnull(recb.qty_ok,0)) as qty from jm_job as job
        left join jm_job_rec as rec on job.jb_no=rec.jb_no
        left join jm_job_rec_b as recb on recb.opsid=rec.opsid
        group by job.jb_no) as jb on jb.jb_no=job.jb_no
--         where recb.op_dd between '2020-09-01' and '2020-09-30' and job.prd_no='F.A1.T02003'
        <where>
            <if test="dep != null and dep.length()>0">
                and job.dep like CONCAT('%',#{dep},'%')
            </if>
            <if test="prdNo != null and prdNo.length()>0">
                and job.prd_no like CONCAT('%',#{prdNo},'%')
            </if>
            <if test="prdName != null and prdName.length()>0">
                and job.prd_name like CONCAT('%',#{prdName},'%')
            </if>
            <if test="begDd != null and begDd.toString().length()>0" >
                and recb.op_dd &gt;= #{begDd}
            </if>
            <if test="endDd != null and endDd.toString().length()>0" >
                and recb.op_dd &lt;= #{endDd}
            </if>
        </where>
        group by job.jb_no,job.dep,job.prd_no,job.prd_name,mo.qty,job.qty,jb.qty) as rec on rec.jb_no=job.jb_no
        group by job.dep,job.prd_no,job.prd_name
        <if test="descOrder!=null and descOrder.length()>0 ">
            ORDER BY ${descOrder} DESC
        </if>
        <if test="ascOrder!=null and ascOrder.length()>0 ">
            ORDER BY ${ascOrder} ASC
        </if>
    </select>

    <select id="getsorgSum" parameterType="com.BSMES.jd.main.dto.ResultType" resultType="com.BSMES.jd.main.dto.Report">
        select convert(date,create_date) as hpdate,sorg,dep,sum(isnull(qty,0)) as qty from jm_job
        <where>
            <if test="dep != null and dep.length()>0">
                and dep = #{dep}
            </if>
            <if test="begDd != null and begDd.toString().length()>0" >
                and convert(date,create_date) &gt;= #{begDd}
            </if>
            <if test="endDd != null and endDd.toString().length()>0" >
                and convert(date,create_date) &lt;= #{endDd}
            </if>
        </where>
        group by convert(date,create_date),sorg,dep
        <if test="descOrder!=null and descOrder.length()>0 ">
            ORDER BY ${descOrder} DESC
        </if>
        <if test="ascOrder!=null and ascOrder.length()>0 ">
            ORDER BY ${ascOrder} ASC
        </if>
    </select>

    <select id="getsorgYield" parameterType="com.BSMES.jd.main.dto.ResultType" resultType="com.BSMES.jd.main.dto.Report">
        select job.dep,convert(date,rec.op_dd) as hpdate,sum(isnull(recb.qty_ok,0)) as qty from jm_job_rec_b as recb
        left join jm_job_rec as rec on recb.opsid=rec.opsid
        left join jm_job as job on job.jb_no=rec.jb_no
        <where>
            <if test="dep != null and dep.length()>0">
                and dep = #{dep}
            </if>
            <if test="begDd != null and begDd.toString().length()>0" >
                and convert(date,rec.op_dd) &gt;= #{begDd}
            </if>
            <if test="endDd != null and endDd.toString().length()>0" >
                and convert(date,rec.op_dd) &lt;= #{endDd}
            </if>
        </where>
        group by job.dep,convert(date,rec.op_dd)
        <if test="descOrder!=null and descOrder.length()>0 ">
            ORDER BY ${descOrder} DESC
        </if>
        <if test="ascOrder!=null and ascOrder.length()>0 ">
            ORDER BY ${ascOrder} ASC
        </if>
    </select>

    <select id="getGood" parameterType="com.BSMES.jd.main.dto.ResultType" resultType="com.BSMES.jd.main.dto.Report">
        select sum(recb.qty_ok)/(sum(recb.qty_ok)+sum(recb.qty_lost/10000)) as qty,job.dep as dep from jm_job_rec rec,jm_job_rec_b recb,jm_job job
        <where>
            rec.opsid=recb.opsid and job.jb_no=rec.jb_no
            <if test="dep != null and dep.length()>0">
                and dep = #{dep}
            </if>
        </where>
        group by job.dep
        <if test="descOrder!=null and descOrder.length()>0 ">
            ORDER BY ${descOrder} DESC
        </if>
        <if test="ascOrder!=null and ascOrder.length()>0 ">
            ORDER BY ${ascOrder} ASC
        </if>
    </select>

    <update id="updateJob" parameterType="com.BSMES.jd.main.dto.JmJobDTO">
        UPDATE jm_job
        <trim prefix="set" suffixOverrides=",">
            <if test="jbNo!=null">jb_no=#{jbNo},</if>
            <if test="qty!=null">qty=#{qty},</if>
            <if test="rsNo!=null">rs_no=#{rsNo},</if>
            <if test="wkNo!=null">wk_no=#{wkNo},</if>
            <if test="mdNo!=null">md_no=#{mdNo},</if>
            <if test="begDd!=null">beg_dd=#{begDd},</if>
            <if test="endDd!=null">end_dd=#{endDd},</if>
            <if test="qtyShip!=null">qty_ship=#{qtyShip},</if>
            <if test="devName!=null">dev_name=#{devName},</if>
            <if test="mdName!=null">md_name=#{mdName},</if>
            <if test="state!=null">state=#{state},</if>
            <if test="qtyOk!=null">qty_ok=#{qtyOk},</if>
        </trim>
        WHERE sid=#{sid} and cid=#{cid}
    </update>

</mapper>